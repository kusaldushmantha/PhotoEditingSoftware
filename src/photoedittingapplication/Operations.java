/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package photoedittingapplication;

import java.awt.BorderLayout;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;

/**
 *
 * @author Kusal
 */
public class Operations extends javax.swing.JFrame {

    /**
     * Creates new form Operations
     */
    public Operations() {
        initComponents();
    }

    public PointOperations pointOperations;
    public FilterOperations filterOperations;
    public ResamplingOperations resamplingOperation;
    public EdgeOperations edgeOperations;
    public ImageHistogram histogram;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pointoperationbtns = new javax.swing.ButtonGroup();
        filtergroup = new javax.swing.ButtonGroup();
        resizegroup = new javax.swing.ButtonGroup();
        edgegroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        radiomeanfilter = new javax.swing.JRadioButton();
        radiomedianfilter = new javax.swing.JRadioButton();
        btnundofilter = new javax.swing.JButton();
        btnapplyfilter = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        radioverticalflip = new javax.swing.JRadioButton();
        radiotranspose = new javax.swing.JRadioButton();
        radiodithering = new javax.swing.JRadioButton();
        radionegative = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        radiomirror = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtscale = new javax.swing.JTextField();
        radionearestneighbour = new javax.swing.JRadioButton();
        radiolinearinterpolation = new javax.swing.JRadioButton();
        btnundoscale = new javax.swing.JButton();
        btnapplyscale = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtthreshold = new javax.swing.JTextField();
        radioprewitt = new javax.swing.JRadioButton();
        radiosobel = new javax.swing.JRadioButton();
        radiolaplacieninward = new javax.swing.JRadioButton();
        radiolaplacienoutwards = new javax.swing.JRadioButton();
        btnundoedge = new javax.swing.JButton();
        btnapplyedge = new javax.swing.JButton();
        histogrampanel = new javax.swing.JPanel();
        btnrefresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Image Operations");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Image Filters", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        filtergroup.add(radiomeanfilter);
        radiomeanfilter.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radiomeanfilter.setText("Mean Filter");

        filtergroup.add(radiomedianfilter);
        radiomedianfilter.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radiomedianfilter.setText("Median Filter");

        btnundofilter.setText("Undo Changes");
        btnundofilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnundofilterActionPerformed(evt);
            }
        });

        btnapplyfilter.setText("Apply");
        btnapplyfilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnapplyfilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radiomedianfilter)
                            .addComponent(radiomeanfilter)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(btnapplyfilter, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnundofilter)))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(radiomeanfilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radiomedianfilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnapplyfilter)
                    .addComponent(btnundofilter))
                .addGap(40, 40, 40))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Point Operations", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        pointoperationbtns.add(radioverticalflip);
        radioverticalflip.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radioverticalflip.setText("Rotate 180deg.");

        pointoperationbtns.add(radiotranspose);
        radiotranspose.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radiotranspose.setText("Transpose");

        pointoperationbtns.add(radiodithering);
        radiodithering.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radiodithering.setText("Dithering");

        pointoperationbtns.add(radionegative);
        radionegative.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radionegative.setText("Negative");

        jButton1.setText("Apply");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Undo Changes");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        pointoperationbtns.add(radiomirror);
        radiomirror.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radiomirror.setText("Vertical Flip (Mirror)");
        radiomirror.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiomirrorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radionegative)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(radioverticalflip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(radiotranspose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(radiodithering, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(radiomirror)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(radioverticalflip)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radiotranspose)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radiodithering)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radionegative)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radiomirror)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Image Resizing", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Scaling Factor :");

        txtscale.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        resizegroup.add(radionearestneighbour);
        radionearestneighbour.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radionearestneighbour.setText("Nearest Neighbour Method");

        resizegroup.add(radiolinearinterpolation);
        radiolinearinterpolation.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radiolinearinterpolation.setText("Linear Interpolation Method");

        btnundoscale.setText("Undo Changes");
        btnundoscale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnundoscaleActionPerformed(evt);
            }
        });

        btnapplyscale.setText("Apply");
        btnapplyscale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnapplyscaleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(btnapplyscale, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnundoscale)
                .addContainerGap(70, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radionearestneighbour)
                            .addComponent(radiolinearinterpolation)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtscale, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(79, 79, 79))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtscale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(radionearestneighbour)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radiolinearinterpolation)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnapplyscale)
                    .addComponent(btnundoscale))
                .addGap(28, 28, 28))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Edge Detection", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Threshold Value :");

        edgegroup.add(radioprewitt);
        radioprewitt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radioprewitt.setText("Prewitt Operator");
        radioprewitt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioprewittActionPerformed(evt);
            }
        });

        edgegroup.add(radiosobel);
        radiosobel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radiosobel.setText("Sobel Operator");

        edgegroup.add(radiolaplacieninward);
        radiolaplacieninward.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radiolaplacieninward.setText("Laplacien Operator - Inward");

        edgegroup.add(radiolaplacienoutwards);
        radiolaplacienoutwards.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radiolaplacienoutwards.setText("Laplacien Operator - Outwards");

        btnundoedge.setText("Undo Changes");
        btnundoedge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnundoedgeActionPerformed(evt);
            }
        });

        btnapplyedge.setText("Apply");
        btnapplyedge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnapplyedgeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtthreshold, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btnapplyedge, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnundoedge))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(radiosobel)
                                .addComponent(radioprewitt)
                                .addComponent(radiolaplacieninward)
                                .addComponent(radiolaplacienoutwards)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtthreshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radioprewitt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radiosobel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radiolaplacieninward)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radiolaplacienoutwards)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnapplyedge)
                    .addComponent(btnundoedge))
                .addContainerGap())
        );

        histogrampanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Image Histogram", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        javax.swing.GroupLayout histogrampanelLayout = new javax.swing.GroupLayout(histogrampanel);
        histogrampanel.setLayout(histogrampanelLayout);
        histogrampanelLayout.setHorizontalGroup(
            histogrampanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 743, Short.MAX_VALUE)
        );
        histogrampanelLayout.setVerticalGroup(
            histogrampanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 159, Short.MAX_VALUE)
        );

        btnrefresh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnrefresh.setText("Refresh Histogram");
        btnrefresh.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnrefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(histogrampanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(318, 318, 318)
                .addComponent(btnrefresh)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(histogrampanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnrefresh, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radiomirrorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiomirrorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radiomirrorActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        pointOperations.resetImage();
        pointoperationbtns.clearSelection();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (radioverticalflip.isSelected()) {
            pointOperations.verticalFlip(pointOperations.imageStack.get(pointOperations.imageStack.size() - 1));
        } else if (radiotranspose.isSelected()) {
            pointOperations.Transpose(pointOperations.imageStack.get(pointOperations.imageStack.size() - 1));
        } else if (radiomirror.isSelected()) {
            pointOperations.Mirror(pointOperations.imageStack.get(pointOperations.imageStack.size() - 1));
        } else if (radionegative.isSelected()) {
            pointOperations.negative(pointOperations.imageStack.get(pointOperations.imageStack.size() - 1));
        } else if (radiodithering.isSelected()) {
            pointOperations.dithering(pointOperations.imageStack.get(pointOperations.imageStack.size() - 1));
        } else {
            JOptionPane.showMessageDialog(this, " Select an option to make a change in the image ");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnapplyscaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnapplyscaleActionPerformed
        try {
            int scale = Integer.parseInt(txtscale.getText());
            if (Integer.toString(scale).isEmpty()) {
                JOptionPane.showMessageDialog(this, " Enter a scale to apply ");
            } else {
                if (radionearestneighbour.isSelected()) {
                    resamplingOperation.nearestNeighbour(resamplingOperation.imageStack.get(resamplingOperation.imageStack.size() - 1), scale);
                } else if (radiolinearinterpolation.isSelected()) {
                    resamplingOperation.linearInterpolation(resamplingOperation.imageStack.get(resamplingOperation.imageStack.size() - 1), scale);
                } else {
                    JOptionPane.showMessageDialog(this, " Select an option to make a change in the image ");
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, " Invalid Scale Input ");
            txtscale.setText("");
        }
    }//GEN-LAST:event_btnapplyscaleActionPerformed

    private void btnundoscaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnundoscaleActionPerformed
        resamplingOperation.reset();
        resizegroup.clearSelection();
        txtscale.setText("");
    }//GEN-LAST:event_btnundoscaleActionPerformed

    private void btnapplyfilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnapplyfilterActionPerformed
        if (radiomeanfilter.isSelected()) {
            filterOperations.meanFilter(filterOperations.imageStack.get(filterOperations.imageStack.size() - 1), 0);
        } else if (radiomedianfilter.isSelected()) {
            filterOperations.meanFilter(filterOperations.imageStack.get(filterOperations.imageStack.size() - 1), -1);
        } else {
            JOptionPane.showMessageDialog(this, " Select an option to make a change in the image ");
        }
    }//GEN-LAST:event_btnapplyfilterActionPerformed

    private void btnundofilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnundofilterActionPerformed
        filterOperations.resetImage();
        filtergroup.clearSelection();
    }//GEN-LAST:event_btnundofilterActionPerformed

    private void btnapplyedgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnapplyedgeActionPerformed
        try {
            int thresholdVal = Integer.parseInt(txtthreshold.getText());
            if (Integer.toString(thresholdVal).isEmpty()) {
                JOptionPane.showMessageDialog(this, " Enter a threshold value to apply ");
            } else {
                if (radioprewitt.isSelected()) {
                    edgeOperations.prewittDetector(edgeOperations.imageStack.get(edgeOperations.imageStack.size() - 1), thresholdVal);
                } else if (radiosobel.isSelected()) {
                    edgeOperations.sobelDetector(edgeOperations.imageStack.get(edgeOperations.imageStack.size() - 1), thresholdVal);
                } else if (radiolaplacieninward.isSelected()) {
                    edgeOperations.laplacienInwardsDetector(edgeOperations.imageStack.get(edgeOperations.imageStack.size() - 1), thresholdVal);
                } else if (radiolaplacienoutwards.isSelected()) {
                    edgeOperations.laplacienOutwardsDetector(edgeOperations.imageStack.get(edgeOperations.imageStack.size() - 1), thresholdVal);
                } else {
                    JOptionPane.showMessageDialog(this, " Select an option to make a change in the image ");
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, " Invalid Threshold Value ");
            txtthreshold.setText("");

        }

    }//GEN-LAST:event_btnapplyedgeActionPerformed

    private void btnundoedgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnundoedgeActionPerformed
        edgeOperations.resetImage();
        edgegroup.clearSelection();
        txtthreshold.setText("");
    }//GEN-LAST:event_btnundoedgeActionPerformed

    private void radioprewittActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioprewittActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioprewittActionPerformed

    private void btnrefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrefreshActionPerformed
        JFreeChart plotHistogram = histogram.plotHistogram(histogram.imageStack.get(histogram.imageStack.size() - 1));
        ChartPanel chart = new ChartPanel(plotHistogram);
        histogrampanel.setLayout(new BorderLayout());
        histogrampanel.add(chart, BorderLayout.CENTER);
        histogrampanel.validate();
    }//GEN-LAST:event_btnrefreshActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Operations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Operations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Operations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Operations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Operations().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnapplyedge;
    private javax.swing.JButton btnapplyfilter;
    private javax.swing.JButton btnapplyscale;
    private javax.swing.JButton btnrefresh;
    private javax.swing.JButton btnundoedge;
    private javax.swing.JButton btnundofilter;
    private javax.swing.JButton btnundoscale;
    public javax.swing.ButtonGroup edgegroup;
    public javax.swing.ButtonGroup filtergroup;
    private javax.swing.JPanel histogrampanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    public javax.swing.ButtonGroup pointoperationbtns;
    private javax.swing.JRadioButton radiodithering;
    private javax.swing.JRadioButton radiolaplacieninward;
    private javax.swing.JRadioButton radiolaplacienoutwards;
    private javax.swing.JRadioButton radiolinearinterpolation;
    private javax.swing.JRadioButton radiomeanfilter;
    private javax.swing.JRadioButton radiomedianfilter;
    private javax.swing.JRadioButton radiomirror;
    private javax.swing.JRadioButton radionearestneighbour;
    private javax.swing.JRadioButton radionegative;
    private javax.swing.JRadioButton radioprewitt;
    private javax.swing.JRadioButton radiosobel;
    private javax.swing.JRadioButton radiotranspose;
    private javax.swing.JRadioButton radioverticalflip;
    public javax.swing.ButtonGroup resizegroup;
    private javax.swing.JTextField txtscale;
    private javax.swing.JTextField txtthreshold;
    // End of variables declaration//GEN-END:variables
}
